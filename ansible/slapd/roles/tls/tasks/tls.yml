---
- name: add openldap user to ssl-cert group (Debian)
  ansible.builtin.user:
    name: openldap
    groups: ssl-cert
    append: yes
  when: |-
    ansible_facts['os_family'] == "Debian"

- name: restart slapd to apply ssl-cert group
  ansible.builtin.systemd_service:
    name: slapd
    state: restarted
    daemon_reload: true
  when: |-
    ansible_facts['os_family'] == "Debian"

- name: check if olcTLSCertificateKeyFile exists
  ansible.builtin.shell: |
    ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// \
      -b 'cn=config' '(cn=config)' olcTLSCertificateKeyFile | \
      grep -e '^olcTLSCertificateKeyFile' | \
      wc -l
  register: res

- name: delete TLS Server Cert/Key
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: cn=config
    changetype: modify
    delete: olcTLSCertificateFile
    -
    delete: olcTLSCertificateKeyFile
    EOF
  when: res.stdout != "0"
  ignore_errors: true

- name: check if olcTLSCertificateFile exists
  ansible.builtin.shell: |
    ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// \
      -b 'cn=config' '(cn=config)' olcTLSCertificateFile | \
      grep -e '^olcTLSCertificateFile' | \
      wc -l
  register: res

- name: delete TLS Server Cert
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: cn=config
    changetype: modify
    delete: olcTLSCertificateFile
    EOF
  when: res.stdout != "0"
  ignore_errors: true

- name: check if olcTLSCACertificateFile exists
  ansible.builtin.shell: |
    ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// \
      -b 'cn=config' '(cn=config)' olcTLSCACertificateFile | \
      grep -e '^olcTLSCACertificateFile' | \
      wc -l
  register: res

- name: add CA cert
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: cn=config
    changetype: modify
    add: olcTLSCACertificateFile
    olcTLSCACertificateFile: {{ tls_cacert_path }}
    EOF
  when: res.stdout == "0"

- name: modify CA Cert
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: cn=config
    changetype: modify
    replace: olcTLSCACertificateFile
    olcTLSCACertificateFile: {{ tls_cacert_path }}
    EOF
  when: res.stdout != "0"

- name: add server cert and key AT THE SAME TIME (Debian and FreeBSD)
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: cn=config
    changetype: modify
    add: olcTLSCertificateFile
    olcTLSCertificateFile: {{ cert_top }}/certs/{{ server_crt }}
    -
    add: olcTLSCertificateKeyFile
    olcTLSCertificateKeyFile: {{ cert_top }}/private/{{ server_key }}
    EOF
  when: |-
    ansible_facts['os_family'] == "Debian" or
    ansible_facts['os_family'] == "FreeBSD"

- name: add server cert and key AT THE SAME TIME (RedHat)
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: cn=config
    changetype: modify
    add: olcTLSCertificateFile
    olcTLSCertificateFile: {{ cert_top }}/certs/{{ server_crt }}
    -
    replace: olcTLSCertificateKeyFile
    olcTLSCertificateKeyFile: {{ cert_top }}/private/{{ server_key }}
    EOF
  when: |-
    ansible_facts['os_family'] == "RedHat"

- name: make slapd.service.d directory
  ansible.builtin.file:
    path: /etc/systemd/system/slapd.service.d
    state: directory
  when: |-
    ansible_facts['service_mgr'] == "systemd"

- name: copy override.conf
  ansible.builtin.template:
    src: override.conf
    dest: /etc/systemd/system/slapd.service.d/override.conf
  when: |-
    ansible_facts['service_mgr'] == "systemd"

- name: restart slapd for TLS
  ansible.builtin.systemd_service:
    name: slapd
    state: restarted
    daemon_reload: true
  when: |-
    ansible_facts['service_mgr'] == "systemd"

- name: open ldaps port (RedHat)
  ansible.posix.firewalld:
    service: ldaps
    state: enabled
    permanent: true
    immediate: true
  when: |-
    ansible_facts['os_family'] == "RedHat"

- name: set LDAP BASE
  ansible.builtin.replace:
    path: "{{ ldap_dir }}/ldap.conf"
    regexp: '^(#)?BASE\s+(.+)'
    replace: 'BASE {{ ldap_suffix }}'

- name: set LDAP URI
  ansible.builtin.replace:
    path: "{{ ldap_dir }}/ldap.conf"
    regexp: '^(#)?URI\s+(.+)'
    replace: 'URI {{ ldap_uri }}'

- name: set TLS_CACERT
  ansible.builtin.lineinfile:
    path: "{{ ldap_dir }}/ldap.conf"
    regexp: '^(#)?TLS_CACERT\s+(.+)'
    line: 'TLS_CACERT {{ tls_cacert_path }}'

- name: set TLS_REQCERT
  ansible.builtin.lineinfile:
    path: "{{ ldap_dir }}/ldap.conf"
    regexp: '^TLS_REQCERT '
    line:    'TLS_REQCERT {{ ldap_tls_reqcert }}'

