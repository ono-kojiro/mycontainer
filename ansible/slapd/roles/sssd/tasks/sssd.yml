---
- name: enable epel-release (OracleLinux)
  ansible.builtin.dnf:
    name:
      - "{{ epel_package }}"
    state: present
  when: ansible_facts['distribution'] == "OracleLinux"

- name: install sssd-ldap for debian
  ansible.builtin.apt:
    name:
      - sssd-ldap
      - sssd-tools
      - oddjob-mkhomedir
  when: ansible_facts['os_family'] == "Debian"

- name: install sssd-ldap for centos
  ansible.builtin.dnf:
    name:
      - openldap-clients
      - sssd
      - sssd-ldap
      - sssd-tools
      - authselect
      - oddjob-mkhomedir
  when: |-
    ansible_facts['os_family'] == "RedHat"

- name: install sssd (FreeBSD)
  ansible.builtin.package:
    name:
    - bash
    - sssd2
    - pam_mkhomedir
    state: present
  when: ansible_facts['os_family'] == "FreeBSD"

- name: create symlink of bash (FreeBSD)
  ansible.builtin.file:
    src:  /usr/local/bin/bash
    dest: /bin/bash
    state: link
  when: ansible_facts['os_family'] == "FreeBSD"

- name: install openldap (FreeBSD)
  community.general.pkgng:
    name:
    - openldap26-client
    state: present
  when: ansible_facts['os_family'] == "FreeBSD"
  
- name: check if sssd is running
  ansible.builtin.systemd:
    name:  sssd
    state: started
  ignore_errors: true
  when: |-
    ansible_facts['service_mgr'] == "systemd"

- name: copy sssd.conf
  ansible.builtin.template:
    src: sssd.conf
    dest: "{{ sysconfdir }}/sssd/sssd.conf"
    owner: "{{ sssd_owner }}"
    group: "{{ sssd_group }}"
    mode: '0600'

- name: enable sss_ssh_authorizedkeys
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?AuthorizedKeysCommand '
    line: AuthorizedKeysCommand {{ authorizedkeyscommand }}

- name: enable AuthorizedKeysCommandUser
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?AuthorizedKeysCommandUser '
    line: 'AuthorizedKeysCommandUser nobody'

- name: enable UsePAM (FreeBSD)
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?UsePAM '
    line: 'UsePAM yes'
  when: |-
    ansible_facts['os_family'] == "FreeBSD"

- name: enable sssd
  ansible.builtin.systemd:
    name: sssd
    enabled: yes
    masked: no
    daemon_reload: yes
  when: |-
    ansible_facts['service_mgr'] == "systemd"

- name: enable sssd (Freebsd)
  community.general.sysrc:
    name: sssd_enable
    value: "YES"
    path: /etc/rc.conf
  when: |-
    ansible_facts['os_family'] == "FreeBSD"

- name: restart sssd
  ansible.builtin.service:
    name: sssd
    state: restarted

- name: restart oddjobd
  ansible.builtin.systemd:
    name: oddjobd
    state: restarted
    daemon_reload: yes
  when: |-
    ansible_facts['os_family'] == "RedHat"

- name: restart sshd
  ansible.builtin.service:
    name:  "{{ sshd_service }}"
    state: restarted

- name: enable mkhomedir for Debian
  shell: |
    pam-auth-update --enable mkhomedir --force
  when: ansible_facts['os_family'] == "Debian"

- name: enable mkhomedir for RedHat
  ansible.builtin.shell: |
    authselect select sssd with-sudo with-mkhomedir --force
    systemctl enable --now oddjobd.service
  when: |-
    ansible_facts['os_family'] == "RedHat"

- name: add sss for nsswitch group (FreeBSD)
  ansible.builtin.replace:
    path: /etc/nsswitch.conf
    regexp: '^group: compat'
    replace: 'group: files sss'
  when: |-
    ansible_facts['os_family'] == "FreeBSD"

- name: add sss for nsswitch passwd (FreeBSD)
  ansible.builtin.replace:
    path: /etc/nsswitch.conf
    regexp: '^passwd: compat'
    replace: 'passwd: files sss'
  when: |-
    ansible_facts['os_family'] == "FreeBSD"

- name: add sss in nsswitch sudo (FreeBSD)
  ansible.builtin.lineinfile:
    path: /etc/nsswitch.conf
    line: 'sudoers: files sss'
  when: |-
    ansible_facts['os_family'] == "FreeBSD"

- name: copy sshd for pam (FreeBSD)
  ansible.builtin.copy:
    src: sshd
    dest: /etc/pam.d/sshd
    mode: '0644'
  when: |-
    ansible_facts['os_family'] == "FreeBSD"

- name: copy system for pam (FreeBSD)
  ansible.builtin.copy:
    src: system
    dest: /etc/pam.d/system
    mode: '0644'
  when: |-
    ansible_facts['os_family'] == "FreeBSD"

- name: copy su for pam (FreeBSD)
  ansible.builtin.copy:
    src:  su
    dest: /etc/pam.d/su
    mode: '0644'
  when: |-
    ansible_facts['os_family'] == "FreeBSD"


