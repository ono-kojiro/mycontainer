---
- name: copy sssd.conf
  template:
    src: sssd.conf
    dest: "{{ sysconfdir }}/sssd/sssd.conf"
    mode: 0600

- name: enable sss_ssh_authorizedkeys
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?AuthorizedKeysCommand '
    line: AuthorizedKeysCommand {{ authorizedkeyscommand }}

- name: enable AuthorizedKeysCommandUser
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?AuthorizedKeysCommandUser '
    line: 'AuthorizedKeysCommandUser nobody'

- name: enable UsePAM (FreeBSD)
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?UsePAM '
    line: 'UsePAM yes'
  when: |-
    ansible_facts['os_family'] == "FreeBSD"

- name: enable sssd
  ansible.builtin.systemd:
    name: sssd
    enabled: yes
    masked: no
  when: |-
    ansible_facts['os_family'] == "RedHat" or
    ansible_facts['os_family'] == "Debian" or
    ansible_facts['os_family'] == "Rocky"

- name: enable sssd (Freebsd)
  community.general.sysrc:
    name: sssd_enable
    value: "YES"
    path: /etc/rc.conf
  when: |-
    ansible_facts['os_family'] == "FreeBSD"


- name: restart sssd for Linux
  ansible.builtin.systemd:
    name: sssd
    state: restarted
    daemon_reload: yes
  when: |-
    ansible_facts['os_family'] == "RedHat" or 
    ansible_facts['os_family'] == "Debian" or 
    ansible_facts['os_family'] == "Rocky"

- name: restart sssd for FreeBSD
  ansible.builtin.service:
    name: sssd
    state: restarted
  when: |-
    ansible_facts['os_family'] == "FreeBSD"

- name: restart oddjobd
  ansible.builtin.systemd:
    name: oddjobd
    state: restarted
    daemon_reload: yes
  when: ansible_facts['os_family'] == "RedHat" or ansible_facts['os_family'] == "Rocky"

- name: restart sshd for RedHat
  ansible.builtin.systemd:
    name: sshd
    state: restarted
    daemon_reload: yes
  when: |-
    ansible_facts['os_family'] == "RedHat" or
    ansible_facts['os_family'] == "Rocky"

- name: restart sshd for Debian
  ansible.builtin.systemd:
    name: ssh
    state: restarted
    daemon_reload: yes
  when: |-
    ansible_facts['os_family'] == "Debian"

- name: restart sshd (FreeBSD)
  ansible.builtin.service:
    name: sssd
    state: restarted
  when: |-
    ansible_facts['os_family'] == "FreeBSD"

- name: enable mkhomedir for Debian
  shell: |
    pam-auth-update --enable mkhomedir --force
  when: ansible_facts['os_family'] == "Debian"

- name: enable mkhomedir for RedHat
  ansible.builtin.shell: |
    authselect select sssd with-sudo with-mkhomedir --force
    systemctl enable --now oddjobd.service
  when: ansible_facts['os_family'] == "RedHat" or ansible_facts['os_family'] == "Rocky"

- name: add sss for nsswitch group (FreeBSD)
  ansible.builtin.replace:
    path: /etc/nsswitch.conf
    regexp: '^group: compat'
    replace: 'group: files sss'
  when: |-
    ansible_facts['os_family'] == "FreeBSD"

- name: add sss for nsswitch passwd (FreeBSD)
  ansible.builtin.replace:
    path: /etc/nsswitch.conf
    regexp: '^passwd: compat'
    replace: 'passwd: files sss'
  when: |-
    ansible_facts['os_family'] == "FreeBSD"

- name: add sss in nsswitch sudo (FreeBSD)
  ansible.builtin.lineinfile:
    path: /etc/nsswitch.conf
    line: 'sudoers: files sss'
  when: |-
    ansible_facts['os_family'] == "FreeBSD"

- name: copy sshd for pam (FreeBSD)
  ansible.builtin.copy:
    src: sshd
    dest: /etc/pam.d/sshd
    mode: '0644'
  when: |-
    ansible_facts['os_family'] == "FreeBSD"

- name: copy system for pam (FreeBSD)
  ansible.builtin.copy:
    src: system
    dest: /etc/pam.d/system
    mode: '0644'
  when: |-
    ansible_facts['os_family'] == "FreeBSD"

- name: copy su for pam (FreeBSD)
  ansible.builtin.copy:
    src:  su
    dest: /etc/pam.d/su
    mode: '0644'
  when: |-
    ansible_facts['os_family'] == "FreeBSD"


