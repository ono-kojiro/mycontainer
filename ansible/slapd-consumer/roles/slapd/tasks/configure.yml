---
- name: change ldap loglevel
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: cn=config
    changetype: modify
    replace: olcLogLevel
    olcLogLevel: acl sync
    EOF

- name: check ldap loglevel
  ansible.builtin.shell: |
    ldapsearch -Q -Y EXTERNAL -H ldapi:/// \
      -LLL -b "cn=config" olcLogLevel
  register: result
  failed_when: result.rc != 0

- name: change ldap suffix
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: {{ ldap_config_dn }}
    changetype: modify
    replace: olcSuffix
    olcSuffix: {{ ldap_suffix }}
    EOF

- name: check ldap suffix 
  ansible.builtin.shell: |
    ldapsearch -Q -Y EXTERNAL -H ldapi:/// \
      -LLL -b "{{ ldap_config_dn }}" olcSuffix | grep olcSuffix
  register: result
  failed_when: result.rc != 0


- name: change ldap rootdn
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: {{ ldap_config_dn }}
    changetype: modify
    replace: olcRootDN
    olcRootDN: {{ masterdn }}
    EOF

- name: check ldap rootdn
  ansible.builtin.shell: |
    ldapsearch -Q -Y EXTERNAL -H ldapi:/// \
      -LLL -b "{{ ldap_config_dn }}" olcRootDN | grep olcRootDN
  register: result
  failed_when: result.rc != 0

- name: add openldap user to ssl-cert group (Debian)
  ansible.builtin.user:
    name: openldap
    groups: ssl-cert
    append: yes
  when: |-
    ansible_facts['os_family'] == "Debian"

- name: restart slapd
  ansible.builtin.systemd_service:
    name: slapd
    state: restarted

- name: upload openssh-lpk.ldif
  ansible.builtin.copy:
    src: openssh-lpk.ldif
    dest: "{{ ldap_dir }}/schema/"
  tags: schema

- name: upload rfc2307bis.ldif
  ansible.builtin.copy:
    src: rfc2307bis.ldif
    dest: "{{ ldap_dir }}/schema/"
  tags: schema


- name: add schema (RedHat)
  ansible.builtin.shell: |
    ldapadd -Q -Y EXTERNAL -H ldapi:/// \
      -f "{{ ldap_dir }}/schema/{{ item }}.ldif"
  loop:
    - cosine
    - inetorgperson
    - openssh-lpk
    - rfc2307bis
  when: |-
    ansible_facts['os_family'] == "RedHat"
  tags: schema
  ignore_errors: true

- name: add ldap tls
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: cn=config
    changetype: modify
    
    add: olcTLSCertificateFile
    olcTLSCertificateFile: {{ cert_dir }}/certs/{{ server_crt }}
    EOF
  tags: tls

- name: add ldap tls key
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: cn=config
    changetype: modify
    
    add: olcTLSCertificateKeyFile
    olcTLSCertificateKeyFile: {{ cert_dir }}/private/{{ server_key }}
    EOF
  tags: tls

- name: change olcTLSCertificateFile
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: cn=config
    changetype: modify
    replace: olcTLSCertificateFile
    olcTLSCertificateFile: {{ cert_dir }}/certs/{{ server_crt }}
    EOF
  tags: tls

- name: check if olcTLScertificateKeyFile exists
  ansible.builtin.shell: |
    ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// \
      -b "cn=config" "objectClass=olcGlobal" | grep olcTLSCertificateKeyFile | wc -l
  register: res
  tags: tls

- name: add olcTLSCertificateKeyFile
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: cn=config
    changetype: modify
    add: olcTLSCertificateKeyFile
    olcTLSCertificateKeyFile: {{ cert_dir }}/private/{{ server_key }}
    EOF
  when: res.stdout == "0"
  tags: tls

- name: check ldap tls certificate file
  ansible.builtin.shell: |
    ldapsearch -Q -Y EXTERNAL -H ldapi:/// \
      -LLL -b "cn=config" olcTLSCertificateFile | wc -l
  register: res
  failed_when: res.rc != 0
  tags: tls

- name: check ldap tls certificate keyfile
  ansible.builtin.shell: |
    ldapsearch -Q -Y EXTERNAL -H ldapi:/// \
      -LLL -b "cn=config" olcTLSCertificateKeyFile | wc -l
  register: res
  failed_when: res.rc != 0
  tags: tls

- name: make slapd.service.d directory
  file:
    path: /etc/systemd/system/slapd.service.d
    state: directory

- name: copy override.conf
  template:
    src: override.conf
    dest: /etc/systemd/system/slapd.service.d/override.conf

- name: change ldap access
  ansible.builtin.shell: |
    cat - << EOF | ldapadd -Q -Y EXTERNAL -H ldapi:///
    dn: olcDatabase={-1}frontend,cn=config
    changetype: modify
    add: olcAccess
    olcAccess: {0}to attrs=userPassword,givenName,sn,photo
      by self write  by anonymous auth  by dn.base={{ masterdn }} write  by * none
    -
    add: olcAccess
    olcAccess: {1}to *  by self read  by dn.base={{ masterdn }} write  by * read
    EOF

- name: check ldap access
  ansible.builtin.shell: |
    ldapsearch -Q -Y EXTERNAL -H ldapi:/// \
      -LLL -b "olcDatabase={-1}frontend,cn=config" olcAccess | grep olcAccess
  register: result
  failed_when: result.rc != 0



#
# disabled now (using echo)
#
- name: disable anonymous access
  ansible.builtin.shell: |
    cat - << EOF | echo ldapadd -Q -Y EXTERNAL -H ldapi:///
    dn: cn=config
    changetype: modify
    add: olcDisallows
    olcDisallows: bind_anon
    
    dn: cn=config
    changetype: modify
    add: olcRequires
    olcRequires: authc
    
    dn: olcDatabase={-1}frontend,cn=config
    changetype: modify
    add: olcRequires
    olcRequires: authc
    EOF



- name: change ldap rootpw
  ansible.builtin.shell: |
    echo "dn: olcDatabase={1}mdb,cn=config" > /tmp/newpasswd.ldif
    echo "changetype: modify" >> /tmp/newpasswd.ldif
    echo "replace: olcRootPW" >> /tmp/newpasswd.ldif
    rootpw=`/usr/sbin/slappasswd -h {SSHA} -s {{ masterpw }}`
    echo "olcRootPW: $rootpw" >> /tmp/newpasswd.ldif
    ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /tmp/newpasswd.ldif
    rm -f /tmp/newpasswd.ldif


- name: copy rfc2307bis.schema
  tags: rfc2307bis
  ansible.builtin.copy:
    #src:  /etc/ldap/schema/fusiondirectory/rfc2307bis.schema
    src:  /etc/ldap/schema/gosa/rfc2307bis.schema
    dest: /etc/ldap/schema/rfc2307bis.schema
    remote_src: yes
  when: |-
    ansible_facts['os_family'] == "Debian"


- name: disable nis.schema
  tags: rfc2307bis
  ansible.builtin.shell: |
    ldap-schema-manager -e nis.schema --yes
  when: |-
    ansible_facts['os_family'] == "Debian"


- name: enable rfc2307bis.schema
  tags: rfc2307bis
  ansible.builtin.shell: |
    ldap-schema-manager -i rfc2307bis.schema --yes
  when: |-
    ansible_facts['os_family'] == "Debian"



- name: copy openssh-lpk.schema
  tags: publickey
  ansible.builtin.template:
    src: openssh-lpk.schema
    dest: /etc/ldap/schema/
  when: |-
    ansible_facts['os_family'] == "Debian"


- name: import openssh-lpk.schema
  tags: publickey
  ansible.builtin.shell:
    ldap-schema-manager -i /etc/ldap/schema/openssh-lpk.schema
  when: |-
    ansible_facts['os_family'] == "Debian"


- name: load memberof module
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: cn=module{0},cn=config
    changetype: modify
    add: olcModuleLoad
    olcModuleLoad: memberof
    EOF
  when: |-
    ansible_facts['os_family'] == "Debian"

- name: create module config (RedHat)
  ansible.builtin.shell: |
    cat - << EOF | ldapadd -Q -Y EXTERNAL -H ldapi:///
    dn: cn=module{0},cn=config
    objectClass: olcModuleList
    cn: module{0}
    olcModulePath: /usr/lib64/openldap/
    EOF
  when: |-
    ansible_facts['os_family'] == "RedHat"

- name: load modules
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: cn=module{0},cn=config
    changetype: modify
    add: olcModuleLoad
    olcModuleLoad: {{ item }}
    EOF
  loop:
  - back_mdb
  - memberof
  - refint
  ignore_errors: true

- name: check if memberof overlay exists
  tags: memberof
  ansible.builtin.shell: |
    ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// \
      -b "cn=config" \
      "(&(objectClass=olcOverlayConfig)(olcOverlay=memberof))" \
      dn | wc -l
  register: res

- name: add memberof overlay
  tags: memberof
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: olcOverlay=memberof,{{ olc_database }}
    changetype: add
    objectClass: olcConfig
    objectClass: olcMemberOf
    objectClass: olcOverlayConfig
    objectClass: top
    olcOverlay: memberof
    olcMemberOfRefInt: TRUE
    olcMemberOfDangling: ignore
    olcMemberOfGroupOC: groupOfNames
    olcMemberOfMemberAD: member
    olcMemberOfMemberOfAD: memberOf
    EOF
  when: res.stdout == "0"
  ignore_errors: true

- name: check if refint overlay exists
  tags: memberof
  ansible.builtin.shell: |
    ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// \
      -b "cn=config" \
      "(&(objectClass=olcOverlayConfig)(olcOverlay=refint))" \
      dn | wc -l

  register: res

     
- name: enable refint overlay
  tags: memberof
  ansible.builtin.shell: |
    cat - << EOF | ldapmodify -Q -Y EXTERNAL -H ldapi:///
    dn: olcOverlay=refint,{{ olc_database }}
    changetype: add
    objectClass: olcConfig
    objectClass: olcRefintConfig
    objectClass: olcOverlayConfig
    objectClass: top
    olcOverlay: refint
    olcRefintAttribute: memberof
    EOF
  when: res.stdout == "0"
  ignore_errors: true

- name: restart slapd.service
  ansible.builtin.systemd:
    name: slapd
    state: restarted
    enabled: true
    daemon_reload: true

