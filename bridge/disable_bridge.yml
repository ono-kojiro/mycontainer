- name: disable bridge
  hosts: myserver

  tasks:
    - name: check if docker exists
      ansible.builtin.shell: |
        which docker
      register: result
      ignore_errors: true
     
    - name: remove docker-net-dhcp plugin
      ansible.builtin.shell: |
        docker network remove mydhcpnet
        docker plugin remove \
          ghcr.io/devplayer0/docker-net-dhcp:release-linux-amd64
      when: result is succeeded
      ignore_errors: true
    
    - name: stop dhcp
      ansible.builtin.systemd:
        name: isc-dhcp-server
        state: stopped

    - name: down {{ new_con }}
      ansible.builtin.shell: |
        nmcli con down {{ new_con }}
      ignore_errors: true

    - name: remove {{ new_con }}
      ansible.builtin.shell: |
        nmcli con del {{ new_con }}
      ignore_errors: true

    - name: remove eth0
      ansible.builtin.shell: |
        nmcli con del eth0
    
    - name: add eth0
      ansible.builtin.shell: |
        nmcli con add \
          type ethernet \
          con-name eth0 \
          ifname eth0

    - name: modify eth0
      ansible.builtin.shell: |
        nmcli con mod eth0 \
          ipv4.method manual \
          ipv4.addresses 192.168.10.1/24 \
          ipv4.dns 192.168.0.1
    
    - name: disable nat
      ansible.builtin.iptables:
        table: nat
        chain: POSTROUTING
        source: 192.168.10.0/24
        out_interface: wlan0
        jump: MASQUERADE
        state: absent

    - name: restart eth0
      ansible.builtin.shell: |
        nmcli con down eth0
        sleep 1
        nmcli con up   eth0
    
    - name: change NIC for dhcp
      ansible.builtin.replace:
        path:  /etc/default/isc-dhcp-server
        regexp: '^(INTERFACESv)4="(.+)"'
        replace: '\1="eth0"'

    - name: start dhcp
      ansible.builtin.systemd:
        name: isc-dhcp-server
        state: started

