---
- name: clear sssd cache
  ansible.builtin.shell: |
    which sss_cache
    if test $? -eq 0 ; then
      sss_cache -EG
    fi

- name: add user
  ansible.builtin.shell: |
    num=$(ldapfinger "{{ item.name }}" | wc -l)
    if test $num -eq 0 ; then
      ldapadduser "{{ item.name }}" "{{ default_group }}"
    fi
  loop: "{{ newusers }}"
  register: result
  failed_when: result.rc != 0

- name: add user to group
  ansible.builtin.shell: |
    groups="$(echo {{ item.groups }} | tr ',' ' ')"
    for group in $groups; do
      ldapaddusertogroup "{{ item.name }}" "$group"
    done
  loop: "{{ newusers }}"
  register: result
  failed_when: result.rc != 0

- name: add gecos
  shell: |
    cat << EOS | ldapmodifyuser "{{ item.name }}"
    changetype: modify
    replace: gecos
    gecos: "{{ item.gecos }}"
    EOS
  loop: "{{ newusers }}"
  register: result
  failed_when: result.rc != 0

- name: set ldap user password
  shell: |
    ldapsetpasswd "{{ item.name }}" `slappasswd -s "{{ item.password }}"`
  loop: "{{ newusers }}"
  register: result
  failed_when: result.rc != 0

- name: add mail
  shell: |
    cat << EOS | ldapmodifyuser "{{ item.name }}"
    changetype: modify
    add: mail
    mail: "{{ item.mail }}"
    EOS
  loop: "{{ newusers }}"
  register: result
  failed_when: result.rc != 0

- name: copy public key
  ansible.builtin.template:
    src: "id_{{ type_of_key }}_{{ item.name}}.pub"
    dest: /tmp/
  loop: "{{ newusers }}"

#- name: add sshPublicKey
#  ansible.builtin.shell: |
#    echo -n "{{ item.password }}\n" | \
#    ssh-ldap-pubkey add \
#      -D {{ masterdn }} \
#      -u {{ item.name }} \
#      /tmp/id_ed25519_{{ item.name }}.pub
#  loop: "{{ newusers }}"

- name: add sshPublicKey
  ansible.builtin.shell: |
    #key=`cat /tmp/{{ item.pubkey }} | awk '{ print $2 }'`
    key=`cat /tmp/{{ item.pubkey }}`

    cat << EOS | ldapmodifyuser "{{ item.name }}"
    changetype: modify
    add: sshPublicKey
    sshPublicKey: $key
    EOS
  loop: "{{ newusers }}"

