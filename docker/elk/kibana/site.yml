- name: install kibana
  hosts: elk

  tasks:
  - name: copy deb package
    ansible.builtin.copy:
      src: kibana-8.6.2-amd64.deb
      dest: /tmp/

  - name: install kibana
    ansible.builtin.apt:
      deb: /tmp/kibana-8.6.2-amd64.deb
  
  - name: change user ID and group ID
    ansible.builtin.shell: |
      groupmod -g 3000 kibana
      usermod  -u 3000 kibana

#  - name: change owner of /etc/default/kibana
#    ansible.builtin.file:
#      path:  /etc/default/kibana
#      state: file
#      owner: root
#      group: kibana

  - name: change owner of /etc directory
    ansible.builtin.file:
      path:  /etc/kibana/
      state: directory
      owner: root
      group: kibana
      recurse: yes
 
  - name: change owner of /var directories
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      owner: kibana
      group: kibana
      recurse: yes
    loop:
    - /var/lib/kibana
    - /var/log/kibana
    - /var/log/kibana

  - name: copy kibana.yml
    ansible.builtin.copy:
      src:  kibana.yml
      dest: /etc/kibana/kibana.yml
      owner: root
      group: kibana
      mode: '0660'
  
#  - name: copy init.d script
#    ansible.builtin.copy:
#      src:  etc-init.d-elasticsearch
#      dest: /etc/init.d/elasticsearch
#      owner: root
#      group: root
#      mode: '0755'
  
#  - name: copy /etc/default/elasticsearch
#    ansible.builtin.copy:
#      src:  etc-default-elasticsearch
#      dest: /etc/default/elasticsearch
#      owner: root
#      group: elasticsearch
#      mode: '0664'


  - name: create /etc/kibana/certs
    ansible.builtin.file:
      path:  /etc/kibana/certs
      state: directory

  - name: copy kibana.key
    ansible.builtin.copy:
      src:  kibana.key
      dest: /etc/kibana/certs/
      owner: kibana
      group: kibana
      mode: '0600'

  - name: copy kibana.crt
    ansible.builtin.copy:
      src:  kibana.crt
      dest: /etc/kibana/certs/
      owner: kibana
      group: kibana
      mode: '0755'


#  - name: start elasticsearch
#    ansible.builtin.shell: |
#      service elasticsearch start

#  - name: check elasticsearch is enabled
#    ansible.builtin.shell: |
#      grep 'service elasticsearch start' /startup.sh
#    register: res
#    ignore_errors: true

#  - name: enable elasticsearch
#    ansible.builtin.replace:
#      path: /startup.sh
#      regexp: '^service sssd start'
#      replace: |
#        service sssd start
#        service elasticsearch start
#    when: res is failed

